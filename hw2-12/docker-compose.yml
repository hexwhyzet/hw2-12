version: '3.8'
services:
  postgresql:
    container_name: postgresql
    image: postgres:15.2
    restart: unless-stopped
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - 5432:5432
    networks:
      - postgresql-network
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:6.20
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - "5050:80"
    networks:
      - postgresql-network
  cache:
    image: redis:6.2-alpine
    restart: always
    networks:
      - postgresql-network
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
#    volumes:
#      - cache:/data
  migration:
    image: liquibase/liquibase:4.19.0
    container_name: migrations
    volumes:
      - ./migrations:/app
    command: --defaultsFile=/app/liquibase.properties update
    networks:
      - postgresql-network
    depends_on:
      - postgresql
  rabbitmq:
    image: rabbitmq:3.10.7-management
    networks:
      - postgresql-network
    ports:
      - "15672:15672"
  producer:
    container_name: producer
    image: producer:latest
    build:
      dockerfile: ./producer.Dockerfile
    restart: unless-stopped
    environment:
      - DB_PORT=5432
      - DB_HOST=postgresql
      - DB_USER=admin
      - DB_PASSWORD=admin
      - DB_DATABASE=admin
      - RABBITMQ_HOST=host.docker.internal
      - RABBITMQ_PORT=15672
      - REDIS_HOST=host.docker.internal
      - REDIS_PORT=6379
      - REDIS_PASSWORD=eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    networks:
      - postgresql-network
    ports:
      - "8000:8000"
    depends_on:
      migration:
        condition: service_completed_successfully
      rabbitmq:
        condition: service_started
  consumer:
    container_name: consumer
    image: consumer:latest
    build:
      dockerfile: ./consumer.Dockerfile
    restart: unless-stopped
    environment:
      - DB_PORT=5432
      - DB_HOST=postgresql
      - DB_USER=admin
      - DB_PASSWORD=admin
      - DB_DATABASE=admin
      - RABBITMQ_HOST=host.docker.internal
      - RABBITMQ_PORT=15672
      - REDIS_HOST=host.docker.internal
      - REDIS_PORT=6379
      - REDIS_PASSWORD=eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    networks:
      - postgresql-network
    depends_on:
      migration:
        condition: service_completed_successfully
      rabbitmq:
        condition: service_started


networks:
  postgresql-network:
    name: "postgresql-network"